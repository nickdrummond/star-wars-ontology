Events

Questions to answer:
- what events was X involved in? eg Event and location value Anakin_Skywalker
- what events happened in X? eg Event and location value Outer_Rim


Options:
1. Simple property assertions on individuals
2. subClass axioms on individuals
3. Named event individuals with property assertions
4. Named event with class expressions for grouping participants
5. hadRole version of 2
6. hadRole combination of 2 and 3
7.
8. Use Team -> Organisation

Analysis
1. Example
  OWK killedBy Darth Vader
  OWK died 0
A bit weak as it doesn't link the 2 things together or tell you how or where

2. Example
  OB1-> killedDuring some (Duel and against value Darth_Vader and on value Death_Star_1 and date value 0)
But, we lose the simple inference that Darth Vader killed Obi Wan unless we put in property chains for these
and keep these other simpler properties

But we can query for them
killedDuring some (date value 0)
diedDuring some (Fight)
diedDuring some (Fight and against value Darth_Vader)
diedDuring some (Event on value Death_Star_1)

Can ask for events in a place? No, at these are not named events
Event and on value Death_Star_1 = nothing unless we name the event (see below)
I suppose it shows up in the usage of Death Star though

3. Example
  ObiDeath Type Duel
  on DeathStar1
  victor DV
  killed Ob1
  date 0
Events can have a date, location, participants etc - more flexible use for battles, deaths, trades, abductions, anything?
This will allow more storytelling and linking to other events
Removes the event from OB1 completely so need inference/usage to see
Lots more individuals!! (scalable?)

Nice other queries:
diedDuring some Duel
diedDuring some (Event and location value Death_Star_1)
diedDuring some (date value 0)
killedDuring some (Fight and victor value Maul)

Event and on value Death_Star_1 = Ob1Death (must click through to find out what Ob1Death is)

This is what we're already doing for Battles though, so that's good

We don't want to make complicated names for every fight
We can still use option 2 and keep it local if the event is simple and not name worthy:
Aurra_Sing -> diedIn some (Murder and victoryOf value Tobias_Beckett and date some xsd:int[> -21, < 10])

Can still query
victorIn some (deathOf value Aurra_Sing)

4. Example
  Twilight of the Apprentice ->
    Fight
    duringWhich some {Ahsoka_Tano, Kanan_Jarrus, Ezra_Bridger, Chopper} and fought some {Seventh_Sister, Fifth_Brother}
    duringWhich some ({Maul} and fought some {Kanan_Jarrus, Ahsoka_Tano} and injurred some {Kanan_Jarrus})
Anonymous groups can be created to show who fought who
But this has the same problem - no visibility in individuals where {} are used for multiple participants

5. Example
  Maul -> hadRole some (Victor and inEvent some (Fight and killed value Seventh_Sister and killed value Fifth_Brother))
Same as 2 only reduces number of properties as we have Role classes instead - maybe if property hierarchy gets bloated?

6. Example
  Maul -> hadRole some (Victor and inEvent some ("Twilight of the Apprentice" and killed value Seventh_Sister and killed value Fifth_Brother))
Name the fight if it is more complex?

7. Example
    "Twilight of the Apprentice" -> {Maul} and killed value Seventh_Sister
Doesn't scan - its an event not a subclass of Maul - what would happen when individuals are disjoint?

8. Example
   in battles we can have Team and hadMember MillFalc and hadMember Nien_Numb and hadMember Lando
   But then we lose the inverse connection to the Falcon etc
   Same probs as 4


OTher requirements...

* Sub fights
How do we deal with skirmishes with multiple sub-fights? Eg Twilight of the Apprentice. We still want to capture Ahsoka vs Vader.
added including/during to have sub fights but then asking location or date gets messy:
killedDuring some (Fight and (during some (location value Malachor_Sith_Temple)))

We want:
killedDuring some (Fight and location value Malachor_Sith_Temple)

All possible properties (injured, survived etc) would need property chains - a bit heavy and not available for datatypes

Do we have to put a date on all sub-fights?



* No survivors
Rather than enumerating all individual deaths, can we do -
Bodhi_Rook -> memberOf some (Rogue_One)
survivor disjointWith died

Battle_of_Scarif -> not (survivor some (memberOf some Rogue_One))

DL query: diedDuring value Battle_of_Scarif = Orson_Krennic

Should include the Rogue_One members? Why not??? Because Rogue_One is a class?

survivor only (not (memberOf value Rogue_One))

No, that didn't work, but it does make it inconsistent to say one of them survived
This is because survivor and died are not covering?